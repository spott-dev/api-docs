openapi: 3.0.0

info:
  title: Spott API
  version: 1.0.0
  description: Spott API documentation.
  contact:
    name: Spott, Inc.
    url: https://spott.dev
    email: hi@spott.dev

servers:
  - url: https://api.spott.dev
    description: Production API server.

paths:
  /places:
    get:
      operationId: getPlaces
      security:
        - ApiKeyAuth: []
      tags:
        - Places
      summary: Returns a list of Places.
      description: >
        Returns a list of Places (either countries, cities or administrative divisions)
        filtered by paramaters.
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/autocomplete'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/adminDivision1'
        - $ref: '#/components/parameters/adminDivision2'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/City'
                    - $ref: '#/components/schemas/AdminDivision1'
                    - $ref: '#/components/schemas/AdminDivision2'
                    - $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /places/{id}:
    get:
      operationId: getPlaceById
      security:
        - ApiKeyAuth: []
      tags:
        - Places
      summary: Returns a Place identified by an ID.
      description: >
        Returns a single Place identified by an ID. Returns "Not Found" error when it doesn't exist.
      parameters:
        - name: id
          in: path
          description: ID of the Place.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/City'
                  - $ref: '#/components/schemas/AdminDivision1'
                  - $ref: '#/components/schemas/AdminDivision2'
                  - $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /places/geoname-id/{geonameId}:
    get:
      operationId: getPlaceByGeonameId
      security:
        - ApiKeyAuth: []
      tags:
        - Places
      summary: Returns a Place identified by a Geoname ID.
      description: >
        Returns a single Place identified by a Geoname ID. Returns "Not Found" error when it doesn't exist.
      parameters:
        - name: geonameId
          in: path
          description: Geoname ID of the place.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/City'
                  - $ref: '#/components/schemas/AdminDivision1'
                  - $ref: '#/components/schemas/AdminDivision2'
                  - $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /places/ip/{ip}:
    get:
      operationId: getPlaceByIp
      security:
        - ApiKeyAuth: []
      tags:
        - Places
      summary: Returns the Place where a given IP Address is located.
      description: >
        Returns the Place where a given IP Address is located. Returns "Not Found" error when no place is related to the IP.
        When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.
      parameters:
        - name: ip
          in: path
          description: IP Address (v4 and v6 are supported).
          required: true
          schema:
            oneOf:
              - type: string
                format: ipv4
              - type: string
                format: ipv6
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/City'
                  - $ref: '#/components/schemas/AdminDivision1'
                  - $ref: '#/components/schemas/AdminDivision2'
                  - $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /countries:
    get:
      operationId: getCountries
      security:
        - ApiKeyAuth: []
      tags:
        - Countries
      summary: Returns a list of Countries.
      description: >
        Returns a list of Countries filtered by paramaters.
        This endpoint is equivalent to `/places` filtering by type "country" (`?type=country`).
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/autocomplete'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /admin-divisions:
    get:
      operationId: getAdminDivisions
      security:
        - ApiKeyAuth: []
      tags:
        - AdminDivisions
      summary: Returns a list of Administrative Divisions.
      description: >
        Returns a list of Administrative Divisions filtered by paramaters.
        This endpoint is equivalent to `/places` filtering by all types of administrative divisions (`?type=adminDivision1,adminDivision2...`).
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/autocomplete'
        - $ref: '#/components/parameters/country'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/AdminDivision1'
                    - $ref: '#/components/schemas/AdminDivision2'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /cities:
    get:
      operationId: getCities
      security:
        - ApiKeyAuth: []
      tags:
        - Cities
      summary: Returns a list of Cities.
      description: >
        Returns a list of Cities filtered by paramaters.
        This endpoint is equivalent to `/places` filtering by type "city" (`?type=city`).
      parameters:
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/autocomplete'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/adminDivision1'
        - $ref: '#/components/parameters/adminDivision2'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /timezones:
    get:
      operationId: getTimezones
      security:
        - ApiKeyAuth: []
      tags:
        - Timezones
      summary: Returns the list of all Time Zones.
      description: >
        Returns the list of all Time Zones available.
        This endpoint does not support any filter.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timezone'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  schemas:
    Id:
      description: Unique identificator given by Spott
      type: string
    GeonameId:
      description: Unique identificator given by GeoNames
      type: integer
      format: int64
    Type:
      description: The classification of this place.
      type: string
      enum:
        - country
        - adminDivision1
        - adminDivision2
        - city
    Name:
      description: Name of the place in requested language.
      type: string
    LocalizedNames:
      description: A list of all other names related to this place.
      type: array
      items:
        type: string
    Population:
      description: The approximate population living in the place.
      type: integer
      format: int64
    Coordinates:
      description: The geographic coordinates where the place is located.
      type: object
      properties:
        latitude:
          description: Latitude component from the geographic coordinates of the place.
          type: number
          minimum: -90.0
          maximum: 90.0
        longitude:
          description: Longitude component from the geographic coordinates of the place.
          type: number
          minimum: -180.0
          maximum: 180.0
    TimezoneId:
      description: Time zone associated to the place.
      type: string
    Score:
      description: Calculated score used to sort by relevance when returning a list. This value might change depending on the request parameters.
      type: number
    RelatedPlace:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        geonameId:
          $ref: '#/components/schemas/GeonameId'
        name:
          $ref: '#/components/schemas/Name'
    Country:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        geonameId:
          $ref: '#/components/schemas/GeonameId'
        type:
          $ref: '#/components/schemas/Type'
        name:
          $ref: '#/components/schemas/Name'
        localizedNames:
          $ref: '#/components/schemas/LocalizedNames'
        population:
          $ref: '#/components/schemas/Population'
        score:
          $ref: '#/components/schemas/Score'
    AdminDivision1:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        geonameId:
          $ref: '#/components/schemas/GeonameId'
        type:
          $ref: '#/components/schemas/Type'
        name:
          $ref: '#/components/schemas/Name'
        localizedNames:
          $ref: '#/components/schemas/LocalizedNames'
        adminDivision1:
          $ref: '#/components/schemas/RelatedPlace'
        adminDivision2:
          $ref: '#/components/schemas/RelatedPlace'
        country:
          $ref: '#/components/schemas/RelatedPlace'
        score:
          $ref: '#/components/schemas/Score'
    AdminDivision2:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        geonameId:
          $ref: '#/components/schemas/GeonameId'
        type:
          $ref: '#/components/schemas/Type'
        name:
          $ref: '#/components/schemas/Name'
        localizedNames:
          $ref: '#/components/schemas/LocalizedNames'
        population:
          $ref: '#/components/schemas/Population'
        adminDivision1:
          $ref: '#/components/schemas/RelatedPlace'
        adminDivision2:
          $ref: '#/components/schemas/RelatedPlace'
        country:
          $ref: '#/components/schemas/RelatedPlace'
        score:
          $ref: '#/components/schemas/Score'
    City:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        geonameId:
          $ref: '#/components/schemas/GeonameId'
        type:
          $ref: '#/components/schemas/Type'
        name:
          $ref: '#/components/schemas/Name'
        localizedNames:
          $ref: '#/components/schemas/LocalizedNames'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        population:
          $ref: '#/components/schemas/Population'
        timezoneId:
          $ref: '#/components/schemas/TimezoneId'
        adminDivision1:
          $ref: '#/components/schemas/RelatedPlace'
        adminDivision2:
          $ref: '#/components/schemas/RelatedPlace'
        country:
          $ref: '#/components/schemas/RelatedPlace'
        score:
          $ref: '#/components/schemas/Score'
    Timezone:
      type: object
      properties:
        id:
          description: Time zone unique identifier.
          type: string
        utcOffset:
          description: The difference in minutes from UTC time to the specified time zone 
          type: number
          format: int32
        countryId:
          description: The identificator of the country where the time zone is located.
          type: string
    Error:
      type: object
      properties:
        code:
          description: Error identifier.
          type: string
        message:
          description: A message to provide more information about the error.
          type: string
  parameters:
    name:
      name: name
      in: query
      description: Query string to find places with a similar name.
      required: false
      schema:
        type: string
    autocomplete:
      name: autocomplete
      in: query
      description: Query string to find places that start with a similar name.
      required: false
      schema:
        type: string
    type:
      name: type
      in: query
      description: Type of the place to filter by.
      required: false
      schema:
        type: string
        enum:
          - country
          - adminDivision1
          - adminDivision2
          - city
    country:
      name: country
      in: query
      description: A country id to filter places located on it.
      required: false
      schema:
        type: string
    adminDivision1:
      name: adminDivision1
      in: query
      description: A adminDivision1 id to filter places located on it.
      required: false
      schema:
        type: string
    adminDivision2:
      name: adminDivision2
      in: query
      description: A adminDivision2 id to filter places located on it.
      required: false
      schema:
        type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
